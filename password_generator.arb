module Generator
    def generate()
        digit = "1234567890".split(//)
        alphaup ="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(//)
        spec ="?/\|}{[]!@#$%^&*()_-+=<>,.`~'':;".split(//)

        while @alphabet_len > 0
          @pass_word = @pass_word + alphaup.sample
          @alphabet_len = @alphabet_len -1
        end
        while @special_char_len > 0
          @pass_word = @pass_word +  spec.sample
          @special_char_len = @special_char_len -1
        end
    
        while @digit > 0
          @pass_word = @pass_word +  digit.sample
          @digit = @digit -1
        end
    end
end

class PasswordGenerator
    private
    include Generator
    def initialize(password_len , alphabet_len , special_char_len , digit ,pass_word)
        @password_len = password_len
        @alphabet_len = alphabet_len
        @special_char_len = special_char_len
        @digit = digit
        @pass_word = pass_word
      end

    public
    def password_len
        print "Enter Passwords Length: "
        @password_len = gets.to_i
        while @password_len == 0
            puts "\nError! You have Entered 0 so no pass_word can be generated..\n Try Again!"
            print "Enter Passwords Length: "
            @password_len = gets.to_i
          end
    end

    def alphabet_len
        print "Enter the Number Of Alphabets: "
        @alphabet_len = gets.to_i
        while @alphabet_len > @password_len
          puts "\nError! The Number of Alphabets are more than passwords Length! \n Try Again!"
          print "Enter the Numbers Of Alphabets: "
          @alphabet_len = gets.to_i
        end
    end

    def special_char_len
        @password_len = @password_len - @alphabet_len
        print "Enter the Numbers of Special Characters: "
        @special_char_len = gets.to_i
        while @special_char_len > @password_len
          puts "\nError! The Number of Special Characters are more than Passwords Length! \n Try Again"
          print "Enter the  Number Of Special Characters: "
          @special_char_len = gets.to_i
        end
    end

    def digit_len
        @password_len = @password_len - @special_char_len
        print "Enter the Number of Digits: "
        @digit = gets.to_i
        while @digit > @password_len
          puts "\nError! The Number of Digits are more than Passwords Length!"
          print "Enter the Number of Digits: "
          @digit = gets.to_i
        end
    end
 
    def mix
        puts @pass_word.split(//).shuffle.join
    end
end

class Pass < PasswordGenerator
    def initialize(password_len , alphabet_len , special_char_len , digit ,pass_word)
        @password_len = password_len
        @alphabet_len = alphabet_len
        @special_char_len = special_char_len
        @digit = digit
        @pass_word = pass_word
    end

    def display
        yield if block_given?
        mix
    end

end

l = lambda {
    print "Generated Password: "
}

pass = Pass.new(0,0,0,0,"")
pass.password_len
pass.alphabet_len
pass.special_char_len
pass.digit_len
pass.generate
pass.display { l.call }

